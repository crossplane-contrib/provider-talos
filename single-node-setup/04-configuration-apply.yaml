# Step 4: ConfigurationApply - Apply the configuration to the Talos machine
apiVersion: machine.talos.crossplane.io/v1alpha1
kind: ConfigurationApply
metadata:
  name: single-node-apply
spec:
  forProvider:
    # Target node endpoint - the machine we're configuring
    endpoint: "192.168.120.83"
    
    # Node identifier (can be IP address)
    node: "192.168.120.83"
    
    # Machine configuration input - Real Talos configuration
    machineConfigurationInput: |
      # Talos machine configuration
      version: v1alpha1
      debug: false
      persist: true
      machine:
        type: controlplane
        token: wlzjnq.6ac5m9oibqwlkuuy
        ca:
          crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
          key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0=
        certSANs: []
        kubelet:
          image: ghcr.io/siderolabs/kubelet:v1.30.7
          defaultRuntimeSeccompProfileEnabled: true
          disableManifestsDirectory: true
        network: {}
        install:
          disk: /dev/sda
          image: ghcr.io/siderolabs/installer:latest
          wipe: false
        sysctls: {}
        sysfs: {}
        registries: {}
        features:
          rbac: true
          stableHostname: true
          apidCheckExtKeyUsage: true
          diskQuotaSupport: true
          kubePrism:
            enabled: true
            port: 7445
          hostDNS:
            enabled: true
            forwardKubeDNSToHost: false
            resolveMemberNames: true
      cluster:
        id: talos-cluster-123
        secret: cluster-secret-456
        controlPlane:
          endpoint: https://192.168.120.83:6443
        clusterName: talos-cluster
        network:
          dnsDomain: cluster.local
          podSubnets:
            - 10.244.0.0/16
          serviceSubnets:
            - 10.96.0.0/12
        token: bootstrap-token-789
        secretboxEncryptionSecret: ""
        ca:
          crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
          key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0=
        aggregatorCA:
          crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
          key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0=
        serviceAccount:
          key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0=
        apiServer:
          image: registry.k8s.io/kube-apiserver:v1.30.7
          extraArgs: {}
          extraVolumes: []
          env: {}
          certSANs: []
          disablePodSecurityPolicy: true
          admissionControl: []
          auditPolicy: {}
        controllerManager:
          image: registry.k8s.io/kube-controller-manager:v1.30.7
          extraArgs: {}
          extraVolumes: []
          env: {}
        proxy:
          disabled: false
          image: registry.k8s.io/kube-proxy:v1.30.7
          mode: ipvs
          extraArgs: {}
        scheduler:
          image: registry.k8s.io/kube-scheduler:v1.30.7
          extraArgs: {}
          extraVolumes: []
          env: {}
        discovery:
          enabled: true
          registries:
            kubernetes:
              disabled: true
            service:
              disabled: false
        etcd:
          image: gcr.io/etcd-development/etcd:v3.5.13
          ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
            key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0=
          extraArgs: {}
          advertisedSubnets: []
        coreDNS:
          image: registry.k8s.io/coredns/coredns:v1.11.1
        externalCloudProvider:
          enabled: false
          manifests: []
        adminKubeconfig:
          certLifetime: 8760h0m0s
        allowSchedulingOnMasters: true
        inlineManifests: []
        extraManifests: []
        extraManifestHeaders: {}
    
    # Client configuration for Talos API access
    # Using certificates from the machine secrets
    clientConfiguration:
      caCertificate: |
        -----BEGIN CERTIFICATE-----
        MIIBPjCB8aADAgECAhBkMCINgMoL15DyhL1lgXJgMAUGAytlcDAQMQ4wDAYDVQQK
        EwV0YWxvczAeFw0yNTA5MDkxODAzMzhaFw0zNTA5MDcxODAzMzhaMBAxDjAMBgNV
        BAoTBXRhbG9zMCowBQYDK2VwAyEA9r2CcPVULVvXG01FwKeIEigaJr9YR6gSXzJe
        llib2UajYTBfMA4GA1UdDwEB/wQEAwIChDAdBgNVHSUEFjAUBggrBgEFBQcDAQYI
        KwYBBQUHAwIwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU/ujzE8hh7saxPy0c
        ObLtubXhnxIwBQYDK2VwA0EAWnwxrZZXvOXTFpiD7IGYikpROKzNsuQEQd+4ZyOx
        2o+ir6urtSDYFVYyVDKdvJpAzqjgDgYhYiwiu/oc5oWeAw==
        -----END CERTIFICATE-----
      clientCertificate: |
        -----BEGIN CERTIFICATE-----
        MIIBPjCB8aADAgECAhBkMCINgMoL15DyhL1lgXJgMAUGAytlcDAQMQ4wDAYDVQQK
        EwV0YWxvczAeFw0yNTA5MDkxODAzMzhaFw0zNTA5MDcxODAzMzhaMBAxDjAMBgNV
        BAoTBXRhbG9zMCowBQYDK2VwAyEA9r2CcPVULVvXG01FwKeIEigaJr9YR6gSXzJe
        llib2UajYTBfMA4GA1UdDwEB/wQEAwIChDAdBgNVHSUEFjAUBggrBgEFBQcDAQYI
        KwYBBQUHAwIwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU/ujzE8hh7saxPy0c
        ObLtubXhnxIwBQYDK2VwA0EAWnwxrZZXvOXTFpiD7IGYikpROKzNsuQEQd+4ZyOx
        2o+ir6urtSDYFVYyVDKdvJpAzqjgDgYhYiwiu/oc5oWeAw==
        -----END CERTIFICATE-----
      clientKey: |
        -----BEGIN ED25519 PRIVATE KEY-----
        MC4CAQAwBQYDK2VwBCIEIDcTLHEOE70yzzXAjgeFZnGcG9nKjXbsUqX0mkxJI4OK
        -----END ED25519 PRIVATE KEY-----
  
  providerConfigRef:
    name: default